const app = require('../app')
const debug = require('debug')('yuno-crm:server')
const http = require('http')
const https = require('https')
const fs = require('fs')
const mongoose = require('mongoose')
const dotenv = require('dotenv')
const dataLoader = require('../src/components/dataLoader')
dotenv.config()

const port = normalizePort(process.env.PORT || '4040')
app.set('port', port)
let server
// MongoDB ulanishi
mongoose
	.connect(process.env.MONGO_URI)
	.then(() => {
		console.log('MongoDB connected')

		// HTTP server
		server = http.createServer(app).listen(port, () => {
			console.log(`âœ… Server running on port ${port}`)
			dataLoader.createADMIN()
		})

		server.on('error', onError)
		server.on('listening', onListening)
	})
	.catch(err => {
		console.error('MongoDB error:', err)
		process.exit(1)
	})

function normalizePort(val) {
	const port = parseInt(val, 10)
	if (isNaN(port)) return val
	if (port >= 0) return port
	return false
}

function onError(error) {
	if (error.syscall !== 'listen') throw error
	const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges')
			process.exit(1)
		case 'EADDRINUSE':
			console.error(bind + ' is already in use')
			process.exit(1)
		default:
			throw error
	}
}

function onListening() {
	const addr = server.address()
	const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
	debug('Listening on ' + bind)
}
